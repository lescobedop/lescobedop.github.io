name: Deploy site

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Install Jupyter Notebook
        run: |
          python -m pip install --upgrade pip
          pip install jupyter nbconvert
          echo "Checking Jupyter install..."
          which jupyter || echo "Jupyter not found in PATH"
          echo "Adding Jupyter to PATH..."
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify Jupyter Installation
        run: |
          echo "Checking Jupyter availability..."
          which jupyter
          jupyter --version
          jupyter nbconvert --version
          if [ ! -f "assets/jupyter/blog.ipynb" ]; then
            echo "Missing blog.ipynb file!"
            exit 1
          fi

      - name: Install GraphicsMagick (Alternative to ImageMagick)
        run: |
          sudo apt-get update
          sudo apt-get install -y graphicsmagick
          echo "Verifying GraphicsMagick installation..."
          if command -v gm &> /dev/null; then
            echo "GraphicsMagick installed successfully: $(gm version)"
          else
            echo "GraphicsMagick installation failed. No 'gm' found."
            exit 1
          fi

      - name: Verify Installations
        run: |
          echo "Ruby:" && ruby -v
          echo "Bundler:" && bundle -v
          echo "Python:" && python --version
          echo "Jupyter:" && jupyter --version
          echo "GraphicsMagick:"
          if ! command -v gm &> /dev/null; then
            echo "GraphicsMagick not found" && exit 1
          else
            gm version
          fi

      - name: Install Dependencies and Build Site
        run: |
          export JEKYLL_ENV=production
          bundle install
          bundle exec jekyll build || (echo "Jekyll Build Failed" && exit 1)

      - name: Purge Unused CSS
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js || echo "PurgeCSS Failed"

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site

      - name: Debug Deployment Files
        run: |
          echo "Listing files in _site directory:"
          ls -lah _site
